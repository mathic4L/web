1.
"Шапку", содержащую ФИО студента, номер группы и номер варианта.
Форму для ввода логина и пароля. Информация о зарегистрированных в системе пользователях должна храниться в отдельной таблице БД (пароль должен храниться в виде хэш-суммы). Доступ неавторизованных пользователей к основной странице приложения должен быть запрещён.

2.
Набор полей ввода. Если поле ввода допускает ввод заведомо некорректных данных (таких, например, как буквы в координатах точки или отрицательный радиус), то приложение должно осуществлять их валидацию.
Динамически обновляемую картинку области и точки. Цвет точек должен зависить от факта попадания
Клик по картинке должен отправляет данные на сервер
Таблицу со списком результатов предыдущих проверок.
Ссылку, по которой аутентифицированный пользователь может закрыть свою сессию и вернуться на стартовую страницу приложения.

Уровень back-end должен быть основан на Spring.
Уровень front-end должен быть построен на React + Redux (необходимо использовать ES6 и JSX) с использованием набора компонентов PrimeReact
Взаимодействие между уровнями back-end и front-end должно быть организовано посредством REST API.
Приложение по-прежнему должно включать в себя 2 страницы - стартовую и основную страницу приложения.

Все результаты проверки должны сохраняться в базе данных под управлением СУБД PostgreSQL.
Для доступа к БД необходимо использовать Spring Data.

Вопросы к защите лабораторной работы:
Платформа Java EE. Спецификации и их реализации.
Принципы IoC, CDI и Location Transpanency. Компоненты и контейнеры.
Управление жизненным циклом компонентов. Дескрипторы развёртывания.
Java EE API. Виды компонентов. Профили платформы Java EE.
Компоненты EJB. Stateless & Stateful Session Beans. EJB Lite и EJB Full.
Работа с электронной почтой в Java EE. JavaMail API.
JMS. Реализация очередей сообщений. Способы доставки сообщений до клиента. Message-Driven Beans.
Понятие транзакции. Управление транзакциями в Java EE. JTA.
Веб-сервисы. Технологии JAX-RS и JAX-WS.
Платформа Spring. Сходства и отличия с Java EE.
Модули Spring. Архитектура Spring Runtime. Spring Security и Spring Data.
Реализация IoC и CDI в Spring. Сходства и отличия с Java EE.
Реализация REST API в Java EE и Spring.
React JS. Архитектура и основные принципы разработки приложений.
Компоненты React. State & props. "Умные" и "глупые" компоненты.
Разметка страниц в React-приложениях. JSX.
Навигация в React-приложениях. ReactRouter.
Управление состоянием интерфейса. Redux.
Angular: архитектура и основные принципы разработки приложений.
Angular: модули, компоненты, сервисы и DI.
Angular: шаблоны страниц, жизненный цикл компонентов, подключение CSS.
Angular: клиент-серверное взаимодействие, создание, отправка и валидация данных форм